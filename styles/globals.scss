html,
body {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
}

body {
  position: relative;
  font-weight: 500;
  font-family: 'Montserrat', sans-serif;
  text-rendering: optimizeLegibility;
  background-color: #0B0B0C;
  background-image: url('/static/images/bg.svg');
  background-position: 100% center;
  background-size: auto 140%;
  background-repeat: no-repeat;
  -webkit-font-smoothing: antialiased;
  -webkit-overflow-scrolling: touch;
}

button {
  background: none;
  font-family: 'Montserrat', sans-serif;
}

a {
  color: inherit;
  text-decoration: none;
}

* {
  box-sizing: border-box;
}


#__next {
  height: 100%;
}

.width-container {

  @include except-mobile {
    max-width: 1120px;
    margin: 0 auto;
    padding: 0 32px;
  }
}


// ==========================================

// ATTN class names should be taken from https://tailwindcss.com/docs
// ATTN don't replace classes with @each generators! Autocomplete will be broken!


// Flex

.flex-wrap {
  flex-wrap: wrap;
}

// by our rules we use specific rules
.flex-1 {
  flex: 1 1 0;
}

.flex-auto {
  flex: 1 1 auto;
}

.flex-none {
  flex: none;
}


// Align items

.items-center {
  align-items: center;
}

.items-start {
  align-items: flex-start;
}

.items-end {
  align-items: flex-end;
}

.items-baseline {
  align-items: baseline;
}

.items-stretch {
  align-items: stretch;
}


// Align self

.self-auto {
  align-self: auto;
}

.self-start {
  align-self: flex-start;
}

.self-end {
  align-self: flex-end;
}

.self-center {
  align-self: center;
}

.self-stretch {
  align-self: stretch;
}


// Justify

.justify-between {
  justify-content: space-between;
}

.justify-center {
  justify-content: center;
}

.justify-start {
  justify-content: flex-start;
}

.justify-end {
  justify-content: flex-end;
}


// Flex direction

.flex-row {
  flex-direction: row;
}

.flex-col {
  flex-direction: column;
}


// Typography

.uppercase {
  text-transform: uppercase;
}

.capitalize {
  text-transform: capitalize;
}

.font-bold {
  font-weight: 700;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.leading-0 {
  line-height: 0;
}

.whitespace-nowrap {
  white-space: nowrap;
}

.underline {
  text-decoration: underline;
}

.text-color-1 {
  color: var(--color-1);
}

.text-color-2 {
  color: var(--color-2);
}

.text-color-3 {
  color: var(--color-3);
}

.text-color-4 {
  color: var(--color-4);
}

.text-color-5 {
  color: var(--color-5);
}

.text-color-accent {
  color: var(--color-accent);
}

.text-color-green {
  color: var(--color-green);
}

.text-color-red {
  color: var(--color-red);
}


// Typography sizes

.text-12-16 {
  font-size: 12px;
  line-height: 16px;

  @include mobile {
    font-size: vw(12);
    line-height: vw(16);
  }
}

.text-14-20 {
  font-size: 14px;
  line-height: 20px;

  @include mobile {
    font-size: vw(14);
    line-height: vw(20);
  }
}

.text-18-28 {
  font-size: 18px;
  line-height: 28px;

  @include mobile {
    font-size: vw(18);
    line-height: vw(28);
  }
}

.text-22-30 {
  font-size: 22px;
  line-height: 30px;

  @include mobile {
    font-size: vw(22);
    line-height: vw(30);
  }
}

.text-32-44 {
  font-size: 32px;
  line-height: 44px;

  @include mobile {
    font-size: vw(32);
    line-height: vw(44);
  }
}


// Display

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

// Overflow

.overflow-hidden {
  overflow: hidden;
}

// Sizing

.w-full {
  width: 100%;
}

.h-full {
  height: 100%;
}

.min-w-1 {
  min-width: 1px;
}

// Background color

.bg-color-1 {
  background-color: var(--color-1);
}

.bg-color-4 {
  background-color: var(--color-4);
}

.bg-color-5 {
  background-color: var(--color-5);
}


// Border

.border-1 {
  border-style: solid;
  border-width: 1px;
}

.border-color-1 {
  border-color: var(--color-1);
}
.border-color-4-1 {
  border-color: var(--color-4-1);
}


// Box

$indentMap: (
  'p' : ('padding'),
  'px': ('padding-left', 'padding-right'),
  'py': ('padding-top', 'padding-bottom'),
  'pt': ('padding-top'),
  'pb': ('padding-bottom'),
  'pr': ('padding-right'),
  'pl': ('padding-left'),
  'm' : ('margin'),
  'mx': ('margin-left', 'margin-right'),
  'my': ('margin-top', 'margin-bottom'),
  'mt': ('margin-top'),
  'mb': ('margin-bottom'),
  'mr': ('margin-right'),
  'ml': ('margin-left'),
);

$autoKeys: ('mt', 'mr', 'mb', 'ml', 'mx');

$indentSizes: (4, 8, 12, 16, 20, 24, 32, 36, 40, 48, 56, 60, 64, 72, 80, 96);

@mixin stylesByMedia($media: null) {
  @each $key, $cssProps in $indentMap {
    @each $size in $indentSizes {

      .#{$key}-#{$size} {
        @each $cssProp in $cssProps {
          @if $media == 'vw' {
            #{$cssProp}: vw($size);
          }
          @else {
            #{$cssProp}: #{$size}px;
          }
        }
      }
    }
  }
}

@each $key in $autoKeys {
  .#{$key}-auto {
    @each $cssProp in map-get($indentMap, $key) {
      #{$cssProp}: auto;
    }
  }
}

@include mobile {

  @include stylesByMedia('vw');

  .radius-5 {
    border-radius: vw(5);
  }

  .radius-10 {
    border-radius: vw(10);
  }

  .radius-12 {
    border-radius: vw(12);
  }

  .radius-16 {
    border-radius: vw(16);
  }
}

@include except-mobile {

  @include stylesByMedia();

  .radius-5 {
    border-radius: 5px;
  }

  .radius-10 {
    border-radius: 10px;
  }

  .radius-12 {
    border-radius: 12px;
  }

  .radius-16 {
    border-radius: 16px;
  }
}
